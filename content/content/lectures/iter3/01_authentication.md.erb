---
title: Authentication
desc: Authentication and Authorization
homework: 1) Read Security in Rails assignments; 2) Teams continue working on products.
---
<%= homework_hdr %>
* **Read:** Security in Rails
  * Read [Rails Security Guide](http://guides.rubyonrails.org/security.html)
  * Read about the Brakeman Gem
  * <%= deliverable "Submit a post (pdf) with some specific things that you will be able to use in your product from these two readings." %>
* **Teams:** You should be up to around steps **DB, UNITTEST, ACCTS, AUTHENT** of the <%= link_to_section :incubator, :project_roadmap %>
* **PA Rails 1:** Begin work on <%= link_to_topic :pa_rails_1 %>. It will be due on Thursday, lab day.

#### Review of resources and controllers!

##### Resources in Rails
* Automatic wiring of plumbing between urls, routing, models, and controllers
* Takes advantage of standardized patterns
    * Nesting model in the URLs
    * CRUD operations as actions
    * Path naming (path_to_user instead of "")
    * Controller naming
* Huge time saver and bug saver!

##### Controller Actions
* Who calls the controller action?
* What parameters are supplied automatically by the controller action?
* Sessions, why they are needed and how they work
* Why does it take two separate actions to implement "create"?
* <%= link_to_topic :url %>

### Authentication and Authorization
<%= include_topic :intro_auth %>

#### Possible implementation strategies in Rails
* Roll your own, using simple authentication
* Look at other options: [Clearance](https://rubygems.org/gems/clearance) or [Sorcery]( https://github.com/NoamB/sorcery) or [Authlogic](http://www.rubydoc.info/github/binarylogic/authlogic)
* My advice: Avoid Devise. From my personal experience Devise is a tempation because it looks so magical but in the end it made life difficult. Many many people like Devise so this is my personal advice. YMMV.

#### Demos
* <%= link_to_topic :clearance_authdemo %>
* <%= link_to_topic :basic_authentication %>

#### Look at next class
* Look at homework <%= link_to_next_lecture %>
